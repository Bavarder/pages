<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bavarder</title><link>http://bavarder.codeberg.page/</link><description>Recent content on Bavarder</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://bavarder.codeberg.page/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://bavarder.codeberg.page/code/baichat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://bavarder.codeberg.page/code/baichat/</guid><description>BAIChat API Python Installation Pypi pip install baichat-py Codeberg pip install --index-url https://codeberg.org/api/packages/Bavarder/pypi/simple/ baichat-py Usage Async import asyncio loop = asyncio.get_event_loop() hello = loop.run_until_complete(chat.async_ask(&amp;#34;Hi&amp;#34;)) print(hello.text) # =&amp;gt; Hello! How can I assist you today? Context manager with BAIChat() as (loop, chat): hello = chat.ask(&amp;#34;Hi&amp;#34;) print(hello.text) # =&amp;gt; Hello! How can I assist you today? Delta with BAIChat() as (loop, chat): hello = chat.ask(&amp;#34;Hi&amp;#34;) for delta in hello: print(delta.text) # =&amp;gt; Hello # =&amp;gt; Hello!</description></item><item><title/><link>http://bavarder.codeberg.page/code/hgchat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://bavarder.codeberg.page/code/hgchat/</guid><description>Hgchat hgchat was a Python wrapper for Hugging Chat. hgchat is now deprecated but you can use Soulter/hugging-chat-api instead.
Installation As library From Pypi pip install hgchat From Codeberg pip install --index-url https://codeberg.org/api/packages/Bavarder/pypi/simple/ hgchat As an interactive prompt git clone https://codeberg.org/Bavarder/hgchat.git # or https://github.com/Bavarder/hgchat.git cd hgchat Usage As library from hgchat import HGChat hgchat = HGChat() r = hgchat.ask(user_input) for i in r: char = i[&amp;#34;token&amp;#34;][&amp;#34;text&amp;#34;] if char == &amp;#34;&amp;lt;/s&amp;gt;&amp;#34;: print(&amp;#34;\n&amp;#34;, end=&amp;#34;&amp;#34;) else: print(char, end=&amp;#34;&amp;#34;) As an interactive prompt python chat.</description></item><item><title/><link>http://bavarder.codeberg.page/help/huggingface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://bavarder.codeberg.page/help/huggingface/</guid><description>Hugging Face A token is not necessary, it allow you to have a bigger rate limit
Create an account on HuggingFace Follow the documentation for getting an user access token Use the generated token in the API key entry</description></item><item><title/><link>http://bavarder.codeberg.page/help/openai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://bavarder.codeberg.page/help/openai/</guid><description>OpenAI The OpenAI API uses API keys for authentication. Visit your API Keys page to retrieve the API key you&amp;rsquo;ll use in your requests.</description></item><item><title/><link>http://bavarder.codeberg.page/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://bavarder.codeberg.page/install/</guid><description>Installation Flatpak Flathub You can either use your GNOME Software and search for &amp;ldquo;Bavarder&amp;rdquo; or you can run
flatpak install io.github.Bavarder.Bavarder From Source Clone the repo and run flatpak-builder
git clone https://codeberg.org/Bavarder/Bavarder.git # or https://github.com/Bavarder/Bavarder.git cd Bavarder flatpak-builder --install --user --force-clean repo/ build-aux/flatpak/io.github.Bavarder.Bavarder.json Archlinux Bavarder is available in the AUR. Just use your favourite aur helper!
yay -S bavarder</description></item></channel></rss>